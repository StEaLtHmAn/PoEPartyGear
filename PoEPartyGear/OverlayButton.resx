<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>